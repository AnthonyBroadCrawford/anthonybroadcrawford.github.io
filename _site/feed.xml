<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anthony Broad-Crawford</title>
    <description>A maker and a builder who believes you should never stop learning.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 08 Oct 2018 09:39:27 -0500</pubDate>
    <lastBuildDate>Mon, 08 Oct 2018 09:39:27 -0500</lastBuildDate>
    <generator>Jekyll v3.8.4</generator>
    
      <item>
        <title>RSpec color, where have you been?</title>
        <description>&lt;p&gt;I’ve been using &lt;a href=&quot;https://www.rubyonrails.org&quot;&gt;Ruby on Rails&lt;/a&gt; for a long time.  I first adopted &lt;a href=&quot;https://www.rubyonrails.org&quot;&gt;Ruby on Rails&lt;/a&gt; back in 2008 when the &lt;a href=&quot;https://www.rubyonrails.org&quot;&gt;Rails&lt;/a&gt; team released their first public version, 0.8.  I remember being blown away at the time. I had just co-founded my first company &lt;a href=&quot;https://www.within3.com&quot;&gt;Within3&lt;/a&gt; and realized that Microsoft technologies were not going to be a good fit for us.  We prototyped a few things in Rails and never looked back.  However, it wasn’t just Rails that blew me away, I was also blown away by the available testing frameworks.&lt;/p&gt;

&lt;p&gt;You see, I was very fortunate to have been personally mentored by &lt;a href=&quot;https://en.wikipedia.org/wiki/Robert_C._Martin&quot;&gt;Uncle Bob Martin&lt;/a&gt;, &lt;a href=&quot;https://www.linkedin.com/in/michaelfeathers/&quot;&gt;Michael Feathers&lt;/a&gt;, and a few of the other folks at Object Mentor when I was at &lt;a href=&quot;https://www.progressive.com&quot;&gt;Progressive Insurance&lt;/a&gt; around 2001.  Not only did they teach me agile, they taught me the values of &lt;a href=&quot;https://en.wikipedia.org/wiki/Test-driven_development&quot;&gt;Test Driven Development&lt;/a&gt; and then &lt;a href=&quot;https://en.wikipedia.org/wiki/Behavior-driven_development&quot;&gt;Behavior Driven Development&lt;/a&gt;.  Both practices have had a big impact on how I develop systems.&lt;/p&gt;

&lt;p&gt;The whole point of me writing any of this, is I just stumbled across a feature in &lt;a href=&quot;https://rspec.info&quot;&gt;RSpec&lt;/a&gt; that I previously hadn’t known existed.  It’s the following options when executing your test suite that has me excited&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rspec —color —format doc

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It’s nothing major, except that it outputs your tests execution results in a very expressive manner.  When coming up to speed on a new code base or re-familiarizing yourself with some of your old code, this could be a great way to understand the intended behaviors of the system.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rspec —color —format doc

SolidityKoans::Instructor 
	When a course is  misconfigured 
		Should raise an ConfigurationException
		Should log to the debug log file 
		Should inform the user about the error on STDOUT

	When a course is properly configured 
		Should execute the Solidity tests associated with that course 
		Should parse output &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;compilation errors 
		Should parse output &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;results 
		Should inform the user about any compilation errors
		Should inform the user about any failing tests 


Finished &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.0034 seconds &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;files took 0.28784 seconds to load&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
8 examples, 0 failures

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Give it a shot, I really like it!&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Aug 2018 19:00:00 -0500</pubDate>
        <link>http://localhost:4000/2018/08/27/rspec-color-where-have-you-been.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/27/rspec-color-where-have-you-been.html</guid>
        
        
      </item>
    
      <item>
        <title>What comes next?</title>
        <description>&lt;p&gt;When I was recruited to &lt;a href=&quot;http://www.spothero.com&quot;&gt;SpotHero&lt;/a&gt; over three years ago I made a few promises to the founders and to the board of directors&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Transition &lt;a href=&quot;http://www.spothero.com&quot;&gt;SpotHero&lt;/a&gt; to a company with Product, Design, &amp;amp; Engineering at its core&lt;/li&gt;
  &lt;li&gt;Establish a solid vision on where SpotHero as a company and it’s products should go&lt;/li&gt;
  &lt;li&gt;Execute a three year roadmap making the above two points a reality leaving SpotHero positioned at the core of the mobility movement including Smart Vehicle and Autonomous Vehicle movement&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Over the last few months I’ve come to realized that I’ve accomplished all of that and a lot more.  Given that I’ve decided it’s time to move on from &lt;a href=&quot;http://www.spothero.com&quot;&gt;SpotHero&lt;/a&gt; and explore what comes next.&lt;/p&gt;

&lt;p&gt;This wasn’t an easy decision, and I’m not exactly done.  Over the next few months I’m going to ensure this is a smooth transition as I wrap up&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Complete the 2019 corporate and Product planning&lt;/li&gt;
  &lt;li&gt;Wrap up a few of the in-flight initiatives for some of our largest tech partners (Google, Apple)&lt;/li&gt;
  &lt;li&gt;Finish some restructuring within the Product, Design, &amp;amp; Engineering organizations&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I want to thank Mark and Larry (&lt;a href=&quot;http://www.spothero.com&quot;&gt;SpotHero&lt;/a&gt; co-founders) for personally recruiting me over three years ago (even after I turned down an offer from them 5 years ago …. sorry about that) to come be a part of this journey.&lt;/p&gt;

</description>
        <pubDate>Wed, 01 Aug 2018 19:00:00 -0500</pubDate>
        <link>http://localhost:4000/2018/08/01/what-comes-next.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/01/what-comes-next.html</guid>
        
        
      </item>
    
      <item>
        <title>Bitcoin, Ethereum, Blockchain, &amp; Crypto-currencies</title>
        <description>&lt;p&gt;Over the last few months I’ve begun to explore the crypto-currency space.&lt;/p&gt;

&lt;p&gt;I initially began by reading the &lt;a href=&quot;https://www.amazon.com/Mastering-Bitcoin-Programming-Open-Blockchain/dp/1491954388/ref=sr_1_3?ie=UTF8&amp;amp;qid=1534355592&amp;amp;sr=8-3&amp;amp;keywords=mastering+bitcoin&quot;&gt;Mastering Bitcoin&lt;/a&gt; book and spinning up a few Bitcoin nodes.  This was incredibly fascinating and exciting given how new some of the larger concepts around decentralization are (at least to me).&lt;/p&gt;

&lt;p&gt;Then I began contributing to the open-source projects in &lt;a href=&quot;https://www.ethereum.org&quot;&gt;Ethereum&lt;/a&gt;  via the &lt;a href=&quot;http://www.ethdocs.org/en/latest/ethereum-clients/cpp-ethereum/&quot;&gt;Ethereum C++ client&lt;/a&gt; and &lt;a href=&quot;https://solidity.readthedocs.io/en/v0.4.24/&quot;&gt;Solidity&lt;/a&gt;  the smart contract programming language.&lt;/p&gt;

&lt;p&gt;I am now actively taking development contracts to build Smart Contracts on &lt;a href=&quot;https://www.ethereum.org&quot;&gt;Ethereum&lt;/a&gt; in a production environment.  I’ve only just begun, so I don’t have that many under my belt at the moment.&lt;/p&gt;

&lt;p&gt;I’ve done this simply to learn.  I have no opinion on Bitcoin, Ethereum, Solidity or any of these technologies at the moment.  Nor do I have an opinion on these technologies replacing fiat currencies at the moment.  I hope through this to learn more resulting in having an informed opinion, but not there yet.&lt;/p&gt;

&lt;p&gt;Here is what I’ve learned so far&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The communities are incredibly welcoming (at least what I have experienced so far)&lt;/li&gt;
  &lt;li&gt;The projects are setup to allow someone new to quickly get involved (I love those beginner labels on GitHub issues)&lt;/li&gt;
  &lt;li&gt;Core contributors have no problem taking time to answer questions, offer advice and direction&lt;/li&gt;
  &lt;li&gt;Communication is a bit fragmented between Gitter, Github, Telegram, and Slack&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ll keep posting more as I get deeper into the space, but you can follow me on &lt;a href=&quot;https://github.com/AnthonyBroadCrawford&quot;&gt;Github&lt;/a&gt;  to track any progress and involvement.&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Jul 2018 18:00:00 -0500</pubDate>
        <link>http://localhost:4000/2018/07/31/getting-up-to-speed-on-cryptocurrencies.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/07/31/getting-up-to-speed-on-cryptocurrencies.html</guid>
        
        
      </item>
    
      <item>
        <title>The best way to let someone go</title>
        <description>&lt;p&gt;&lt;em&gt;This is a cross-post from the &lt;a href=&quot;www.thewatercooler.io&quot;&gt;Water Cooler&lt;/a&gt; leadership forum.  A forum for technology executives to discuss the ins/outs of running fast growing/scaling companies.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here is what I’ve found to be helpful at both fortune 500 &amp;amp; early stage companies.  However, I don’t claim this to be &lt;strong&gt;the best&lt;/strong&gt; way to let someone go.&lt;/p&gt;

&lt;p&gt;Lastly, all of this assumes the termination is driven by performance vs. some other situational behavior that requires immediate termination (physical violence in the workplace, intimidation, intoxication, etc).  If the behavior requires instant dismisal, the below may not be the best approach.&lt;/p&gt;

&lt;p&gt;Process I follow when having to let someone go&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;I always do it on a Friday. This gives them the weekend to cool off, process the news, etc. Also, any support group they have will most likely be available given it’s the weekend.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Always schedule it towards the end of the day on Friday, so if they choose to return to the office after being terminated almost everyone has gone home for the weekend
Have both HR+legal in the room (if possible), if not, another member of management from anywhere in the org&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Schedule the meeting in a conference room away from their team and closest to exits if possible&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;While the meeting is happening have someone cleaning out their desk, disabling email/slack access, etc. When meeting is done their things should be handed to them and all access to anything company related should have been removed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Opening sentence officially executing the termination should be delivered in 5 seconds or less. Be clear, be succinct, be direct. I’ve found simply stating, “Anthony, I’m letting you go effective immediately” is the only way to start this conversation.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Second sentence should articulate terms (severance, impact to equity, etc)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Final sentence should indicate this is non-negotiable&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point, I encourage the manager executing the termination leaves the room. Nothing of value to any party involved is gained by the manager staying and engaging in any type of “debate”. All questions from the employee should go to HR &amp;amp; legal in the room at that time.&lt;/p&gt;

&lt;p&gt;After this meeting, call an ad-hoc meeting with the terminated employees immediate team and communicate the termination. Again, be clear and succinct. Allow for questions and answer in a transparent and respectful manner.&lt;/p&gt;

&lt;p&gt;If the role/person warrants send an email to a broader audience communicating the termination. As always, be transparent as you can while also respecting the terminated employee.&lt;/p&gt;

&lt;p&gt;Lastly, keep in mind this is another human being. Treat them how you yourself would want to be treated in these scenarios.&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Jul 2018 19:00:00 -0500</pubDate>
        <link>http://localhost:4000/2018/07/30/the-best-way-to-let-someone-go.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/07/30/the-best-way-to-let-someone-go.html</guid>
        
        
      </item>
    
      <item>
        <title>How to give feedback</title>
        <description>&lt;p&gt;&lt;em&gt;This is a cross-post from the &lt;a href=&quot;www.thewatercooler.io&quot;&gt;Water Cooler&lt;/a&gt; leadership forum.  A forum for technology executives to discuss teh ins/outs of running fast growing/scaling companies&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here’s what I’ve done in the past that has proven helpful for me across many teams and companies.&lt;/p&gt;

&lt;p&gt;Before I go further, I want to emphasize I work very hard to create cultures where feedback is constant, bi-directional, and the key emphasis is on learning and growing.  This means mistakes are made, discussed, celebrated, and ultimately rooted in identifying what we can learn from it and how can we share those hearings far &amp;amp; wide.&lt;/p&gt;

&lt;p&gt;Here are some things I do&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I don’t wait to the next 1:1 to give feedback, I give it as soon as possible. This removes any stress you may have in providing it, and the details are still fresh in everyones mind&lt;/li&gt;
  &lt;li&gt;I am direct with my feedback. I don’t execute the preverbal “shit sandwich” trying to lessen the blow.  Just discuss it&lt;/li&gt;
  &lt;li&gt;Discuss it.  Don’t just deliver feedback.  Always assume positive intentions, seek to deeply understand, and have a bi-directional conversation&lt;/li&gt;
  &lt;li&gt;Focus on what can be learned.  This usually helps create a safer environment to receive feedback. &lt;em&gt;I spend a lot of my time cultivating this type of environment&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of this is backdropped by creating a culture where learning &amp;amp; growth are the key goals and feedback is frequent and bi-directional.&lt;/p&gt;

&lt;p&gt;These have worked for me over the years, hope they help.&lt;/p&gt;

</description>
        <pubDate>Sat, 28 Jul 2018 19:00:00 -0500</pubDate>
        <link>http://localhost:4000/2018/07/28/how-to-give-feedback.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/07/28/how-to-give-feedback.html</guid>
        
        
      </item>
    
      <item>
        <title>Experimenting with new habits</title>
        <description>&lt;p&gt;I recently took off the month of December.  It was an amazing decision that finally gave me some uninterrupted time to focused on my family and myself.&lt;/p&gt;

&lt;p&gt;This time off afforded me the ability experiment with a lot of changes to my daily routine.  The end goal being a more balanced and focused day-to-day me.  With the idea that an improved “me” allows room for improving all other areas.&lt;/p&gt;

&lt;p&gt;I tried about 13 different things that range from focusing on exercise, to eating habits and patterns, diet, meditation, and more.  A lot stuck, and a lot didn’t however, the ones that stuck I find truly awesome.&lt;/p&gt;

&lt;h1 id=&quot;high-protein-breakfast&quot;&gt;High protein breakfast&lt;/h1&gt;
&lt;p&gt;This was the easiest to pull off and has had the biggest return.   I’ll let you google all the benefits, but the punchline for me is I’m never hungry and have lost weight.&lt;/p&gt;

&lt;p&gt;I start the day with ~40 grams of protein in the 300-450 calorie range and do the same again around lunch.&lt;/p&gt;

&lt;p&gt;I eat breakfast around 5:30 am and usually ravenous by lunch.  Now, I’m barely hungry come noon.  This has not only made me eat less but also healthier.  Plus, I eat a lot of foods that I love.&lt;/p&gt;

&lt;p&gt;I kept this habit and even extended it to lunch at the office.  I have to pack and lug my lunch into the office, but I somehow manage to survive.&lt;/p&gt;

&lt;h1 id=&quot;ice-cold-morning-showers&quot;&gt;Ice cold morning showers&lt;/h1&gt;
&lt;p&gt;I’m not talking warm, cool, or only “kinda” cold.  These are shockingly cold showers, the kind that make you gasp for air and borderline going into shock cold showers.&lt;/p&gt;

&lt;p&gt;Why?  I initially explored (well, stumbled across an article on Medium) cold showers for their health benefits.  If you google this you will typically see a list of somewhere between 7-11 amazing advantages.  I asked my doctors about this, they had never heard of it.  So I don’t do it for the health reasons, I do it for simply how it makes me feel during and after the shower.&lt;/p&gt;

&lt;p&gt;When I step out of that shower each morning I feel a level of alert and alive I cannot describe.  It’s awesome!!  It’s a rush and almost a high for the next hour or so and I feel more alert long into the day.&lt;/p&gt;

&lt;p&gt;I guess those Polar bear clubs had a great idea!&lt;/p&gt;

&lt;h1 id=&quot;finally-going-to-the-gym&quot;&gt;Finally going to the gym&lt;/h1&gt;
&lt;p&gt;This is an obvious one however, I always struggled finding a way to squeeze this into my hectic schedule.  When choosing between time with the family, my kids, my wife, or work, this always got pushed.&lt;/p&gt;

&lt;p&gt;Over the course of December and now into the new year I have a great habit of going to the gym about 3 times a week.  I’ve even taken the momentum from December and found creative ways to work it into my schedule now that I’ve taken on a full-time client for the next several months.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A simple routine of about 20 minutes of exercise each morning (not exactly each morning yet, but getting close)&lt;/li&gt;
  &lt;li&gt;One awful morning of getting up at 4:30 am in the morning to hit the gym before work&lt;/li&gt;
  &lt;li&gt;Two trips to the gym on the weekend&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This took me from zero trips in the gym pre-break to doing a heck of a lot better now.&lt;/p&gt;

&lt;h1 id=&quot;daily-meditation&quot;&gt;Daily meditation&lt;/h1&gt;
&lt;p&gt;I know there are a lot of formal methods of meditation to choose from.  I’ll maybe someday get into those, but I wanted something a little more light weight to start.&lt;/p&gt;

&lt;p&gt;So I keep it simple.  I make sure each day to reflect on the following&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;How am I progressing on my goals&lt;/li&gt;
  &lt;li&gt;Why am I thankful&lt;/li&gt;
  &lt;li&gt;What can I improve about me, as a father, and as a husband&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Doesn’t take more than fifteen minutes and I make sure to write down my reflections.  Writing it down somehow makes me feel more committed and allows me to read back through previous days.&lt;/p&gt;

&lt;p&gt;#The payoff
I previously kept my habit of getting up early in the morning and reducing almost all alcohol from my diet.  With these new habits, I’ve never felt better. Even better is with this direction and momentum I feel it providing positive impact on the other aspects of my life.&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Jan 2016 18:00:00 -0600</pubDate>
        <link>http://localhost:4000/health/2016/01/20/experimenting-with-change.html</link>
        <guid isPermaLink="true">http://localhost:4000/health/2016/01/20/experimenting-with-change.html</guid>
        
        
        <category>health</category>
        
      </item>
    
      <item>
        <title>High performance Ruby with Rust</title>
        <description>&lt;p&gt;I’ve been exploring &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; over the last year and a half with one big question on my mind, how do I integrate &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; into an existing codebase.&lt;/p&gt;

&lt;p&gt;Taking a high performance language like &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; and pairing it with &lt;a href=&quot;http://www.rails.org&quot;&gt;Rails&lt;/a&gt;, a technology built for rapid feature development, would give a technology team the best of both worlds.&lt;/p&gt;

&lt;p&gt;This talk introduces the fundamental components to leveraging &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; from within a &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt; technology like &lt;a href=&quot;http://www.rails.org&quot;&gt;Rails&lt;/a&gt; and how to build for high performance.&lt;/p&gt;

&lt;p&gt;I’ll be given this talk on 11/3/15 @ Groupon’s &lt;a href=&quot;http://www.meetup.com/Geekfest/&quot;&gt;Geekfest&lt;/a&gt;.  You can RSVP &lt;a href=&quot;http://www.meetup.com/Geekfest/events/225236009/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 22 Sep 2015 19:00:00 -0500</pubDate>
        <link>http://localhost:4000/talks/2015/09/22/Talk-High-performance-Ruby-with-Rust.html</link>
        <guid isPermaLink="true">http://localhost:4000/talks/2015/09/22/Talk-High-performance-Ruby-with-Rust.html</guid>
        
        
        <category>talks</category>
        
      </item>
    
      <item>
        <title>My first open source contribution</title>
        <description>&lt;p&gt;I’ve been the benefactor of open source software since college in the late 1990’s.  Given I’ve been using open source software that long, it’s actually shameful it took me until this week to contribute back to the community.&lt;/p&gt;

&lt;p&gt;I’m no stranger to standing on the shoulders of open source giants.  Most technology companies benefit from it and it has continually given me, and my companies, so much.  However, my lack of a return contribution recently changed as I committed to an open source project, &lt;a href=&quot;https://en.wikipedia.org/wiki/Servo_(layout_engine)&quot;&gt;Servo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My contribution was small, by design on both parties, but it’s a start.  I made a small user experience improvement in some Python installation scripts.  I hope to additionally contribute back to the &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; project.  Hopefully this snowballs as time goes on.&lt;/p&gt;

&lt;p&gt;One &lt;a href=&quot;https://github.com/servo/servo/pull/7678&quot;&gt;down&lt;/a&gt;, and many more to go.&lt;/p&gt;

</description>
        <pubDate>Tue, 22 Sep 2015 16:11:51 -0500</pubDate>
        <link>http://localhost:4000/servo/rust/opensource/2015/09/22/My-first-opensource-contribution.html</link>
        <guid isPermaLink="true">http://localhost:4000/servo/rust/opensource/2015/09/22/My-first-opensource-contribution.html</guid>
        
        
        <category>servo</category>
        
        <category>rust</category>
        
        <category>opensource</category>
        
      </item>
    
      <item>
        <title>Introducing Rust to Ruby</title>
        <description>&lt;p&gt;I’ve been exploring &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; over the last year and a half with one big question on my mind, how do I integrate &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; into an existing codebase.  At &lt;a href=&quot;www.fooda.com&quot;&gt;Fooda&lt;/a&gt; that’s a Rails application.&lt;/p&gt;

&lt;p&gt;This talk introduces the fundamental components to leveraging &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; from within a &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt; application like &lt;a href=&quot;http://www.rails.org&quot;&gt;Rails&lt;/a&gt;&lt;/p&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/4rsob0GDicQzFC&quot; width=&quot;100%&quot; height=&quot;355&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/broadcrawford/intro-to-introducing-rust-to-ruby&quot; title=&quot;Intro to introducing rust to ruby&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt; &lt;/strong&gt; &lt;/div&gt;

</description>
        <pubDate>Tue, 15 Sep 2015 16:00:00 -0500</pubDate>
        <link>http://localhost:4000/talks/2015/09/15/Talk-introduction-to-Rust-in-Ruby.html</link>
        <guid isPermaLink="true">http://localhost:4000/talks/2015/09/15/Talk-introduction-to-Rust-in-Ruby.html</guid>
        
        
        <category>talks</category>
        
      </item>
    
      <item>
        <title>Calling Rust from Ruby</title>
        <description>&lt;p&gt;I’ve falling in love with &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; over the last year and a half.  I like it
for a lot of reasons, a few being the compiler, seperation of noun/verb,
and it’s deeply integrated testing.   However, recently been thinking through ways
to introduce it to the team and the technology portfolio at &lt;a href=&quot;http://www.fooda.com&quot;&gt;Fooda&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One idea we had, was move some of our computational intensive tasks to &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt;
given that is one of it’s “sweet spots” as a technology.  However, this left us wondering
how exactly would we mix it in with Ruby.  Specifically, how do we call &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt;
from within Ruby.&lt;/p&gt;

&lt;p&gt;As it turns out, it’s actually fairly easy to call &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; from within Ruby
so long as you understand a few simple things, namely&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rust&lt;/li&gt;
  &lt;li&gt;C and ABI&lt;/li&gt;
  &lt;li&gt;FFI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With those, and a few lines of code to begin calling Rust from within your Ruby code.&lt;/p&gt;

&lt;h1 id=&quot;preparing-rust-to-be-callable-from-ruby&quot;&gt;Preparing Rust to be “callable” from Ruby&lt;/h1&gt;
&lt;p&gt;Ultimately, you don’t need to do a whole lot to make your &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; code available to C.&lt;br /&gt;
In fact, here’s a simple &lt;code class=&quot;highlighter-rouge&quot;&gt;hello world&lt;/code&gt; example.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/e3e99f733add2830f89a.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;With the code snippet above, you’ll see a couple things different from your typical
&lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; function.  So lets break it down …&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#[no_mangle]&lt;/code&gt;  This tells the &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; compiler to expose this a global function
and don’t mangle it with an internal name&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;extern &quot;C&quot;&lt;/code&gt; This exposes the function as if it was a &lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt; function via the &lt;code class=&quot;highlighter-rouge&quot;&gt;C ABI&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*const libc::c_char&lt;/code&gt; Our function returns a &lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt; “string”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Outside that, our function is a regular &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; function that does it’s thing.&lt;/p&gt;

&lt;h1 id=&quot;compile-in-a-slightly-different-way&quot;&gt;Compile in a slightly different way&lt;/h1&gt;
&lt;p&gt;Now that your &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; code is exposed prepared properly, we need to ensure
we compile in a manner Ruby can accept, specifically a dynamic library. You can do this two ways, the command line or a Cargo toml file.  I’m doing it
through Cargo and a &lt;code class=&quot;highlighter-rouge&quot;&gt;toml&lt;/code&gt; file below&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;[package]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;library&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;0.1.0&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;authors&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Anthony Broad-Crawford &amp;lt;anthony@anthonybroadcrawford.com&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[lib]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;crate-type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;[&quot;dylib&quot;]&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[dependencies]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;libc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;0.1.10&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When you execute &lt;code class=&quot;highlighter-rouge&quot;&gt;Cargo build&lt;/code&gt; you will now have a dynamic library &lt;code class=&quot;highlighter-rouge&quot;&gt;.dylib&lt;/code&gt; in your
targets folder.&lt;/p&gt;

&lt;h1 id=&quot;including-your-rust-library-in-ruby&quot;&gt;Including your Rust library in Ruby&lt;/h1&gt;
&lt;p&gt;If there’s an icky part to this whole process, this is it right here.  You’ll need a one-to-one
mapping of the functionality you expose in your &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; dynamic library to your &lt;code class=&quot;highlighter-rouge&quot;&gt;Ruby&lt;/code&gt; application.&lt;/p&gt;

&lt;p&gt;Here’s an example of how this is done leveraging &lt;code class=&quot;highlighter-rouge&quot;&gt;ffi&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ffi'&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Rust&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;extend&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FFI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Library&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ffi_lib&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../rust-library/target/debug/liblibrary.dylib'&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;attach_function&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hello_world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:string&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Please note, the &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; reference above in the &lt;code class=&quot;highlighter-rouge&quot;&gt;ffi_lib&lt;/code&gt; method call is specific to a sample project I’ve
included below.&lt;/p&gt;

&lt;h1 id=&quot;test-drive-in-irb&quot;&gt;Test drive in IRB&lt;/h1&gt;
&lt;p&gt;At this point you are able to take it for a test drive in irb.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ABC-194:rust-library anthony&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;Cargo build
   Compiling libc v0.1.10
   Compiling library v0.1.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;file:///Users/anthony/example_rust_called_from_ruby/rust-library&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
ABC-194:rust-library anthony&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
ABC-194:example_rust_called_from_ruby anthony&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;            ..           .git         ruby-library rust-library
ABC-194:example_rust_called_from_ruby anthony&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ruby-library/
ABC-194:ruby-library anthony&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;              ..             ruby-client.rb
ABC-194:ruby-library anthony&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;irb
2.0.0-p247 :001 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; require &lt;span class=&quot;s2&quot;&gt;&quot;./ruby-client&quot;&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;2.0.0-p247 :002 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; Rust::hello_world
 &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello world&quot;&lt;/span&gt;
2.0.0-p247 :003 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s it.  I was incredibly surprised at how easy it was.  The only thing I don’t like,
is maintaining that one-to-one mapping in via &lt;code class=&quot;highlighter-rouge&quot;&gt;ffi&lt;/code&gt; in Ruby.  A small price to pay, I guess.&lt;/p&gt;

&lt;h1 id=&quot;complete-working-example&quot;&gt;Complete working example&lt;/h1&gt;
&lt;p&gt;I’ve put together a complete working example that will allow you from irb to call into
a &lt;a href=&quot;https://www.rust-lang.org&quot;&gt;Rust&lt;/a&gt; module.  It’s a &lt;code class=&quot;highlighter-rouge&quot;&gt;hello world&lt;/code&gt; but it works.&lt;/p&gt;

&lt;p&gt;It’s found &lt;a href=&quot;https://github.com/AnthonyBroadCrawford/example_rust_called_from_ruby&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 27 Aug 2015 16:11:51 -0500</pubDate>
        <link>http://localhost:4000/rust/ruby/2015/08/27/Calling-Rust-From-Ruby.html</link>
        <guid isPermaLink="true">http://localhost:4000/rust/ruby/2015/08/27/Calling-Rust-From-Ruby.html</guid>
        
        
        <category>Rust</category>
        
        <category>Ruby</category>
        
      </item>
    
  </channel>
</rss>
